@page "/drivers"
@inject IRepository<Driver> DriverRepository

<div class="drivers-page">
    <header class="text-center">
        <h1 class="display-4">ðŸšš Driver Management</h1>
        <p class="lead">Manage and track your drivers efficiently.</p>
        <hr class="my-4">
    </header>

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h3 class="text-center mb-4">Driver List</h3>

                @if (Drivers != null && Drivers.Any())
                {
                    <table class="table table-bordered">
                        <thead class="thead-light">
                            <tr>
                                <th>Driver ID</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Phone</th>
                                <th>License Number</th>
                                <th>License Expiry</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var driver in Drivers)
                            {
                                <tr>
                                    <td>@driver.Driverid</td>
                                    <td>
                                        @if (driver.Driverid == EditingDriver?.Driverid)
                                        {
                                            <input class="form-control" @bind="EditingDriver.Firstname" />
                                        }
                                        else
                                        {
                                            @driver.Firstname
                                        }
                                    </td>
                                    <td>
                                        @if (driver.Driverid == EditingDriver?.Driverid)
                                        {
                                            <input class="form-control" @bind="EditingDriver.Lastname" />
                                        }
                                        else
                                        {
                                            @driver.Lastname
                                        }
                                    </td>
                                    <td>
                                        @if (driver.Driverid == EditingDriver?.Driverid)
                                        {
                                            <input class="form-control" @bind="EditingDriver.Phone" />
                                        }
                                        else
                                        {
                                            @driver.Phone
                                        }
                                    </td>
                                    <td>
                                        @if (driver.Driverid == EditingDriver?.Driverid)
                                        {
                                            <input class="form-control" @bind="EditingDriver.Licensenumber" />
                                        }
                                        else
                                        {
                                            @driver.Licensenumber
                                        }
                                    </td>
                                    <td>
                                        @if (driver.Driverid == EditingDriver?.Driverid)
                                        {
                                            <input class="form-control" @bind="EditingDriver.Licenseexpiry" type="date" />
                                        }
                                        else
                                        {
                                            @driver.Licenseexpiry
                                        }
                                    </td>
                                    <td>
                                        @if (driver.Driverid == EditingDriver?.Driverid)
                                        {
                                            <input class="form-control" @bind="EditingDriver.Status" />
                                        }
                                        else
                                        {
                                            @driver.Status
                                        }
                                    </td>
                                    <td>
                                        @if (driver.Driverid == EditingDriver?.Driverid)
                                        {
                                            <button class="btn btn-success btn-sm" @onclick="SaveDriver">Save</button>
                                            <button class="btn btn-secondary btn-sm" @onclick="CancelEdit">Cancel</button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-primary btn-sm" @onclick="() => StartEditing(driver)">Edit</button>
                                            <button class="btn btn-danger btn-sm" @onclick="() => DeleteDriver(driver.Driverid)">Delete</button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-center">No drivers available.</p>
                }

                <div class="text-center mt-4">
                    <button class="btn btn-primary" @onclick="AddNewDriver">Add New Driver</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Driver>? Drivers { get; set; }
    private Driver? EditingDriver { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadDriversAsync();
    }

    private async Task LoadDriversAsync()
    {
        try
        {
            Drivers = await DriverRepository.GetAllAsync() ?? new List<Driver>();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading drivers: {ex.Message}");
        }
    }

    private void StartEditing(Driver driver)
    {
        EditingDriver = new Driver
        {
            Driverid = driver.Driverid,
            Firstname = driver.Firstname,
            Lastname = driver.Lastname,
            Phone = driver.Phone,
            Licensenumber = driver.Licensenumber,
            Licenseexpiry = driver.Licenseexpiry,
            Status = driver.Status
        };
    }

    private async Task SaveDriver()
    {
        if (EditingDriver == null)
        {
            return;
        }

        try
        {
            await DriverRepository.UpdateAsync(EditingDriver.Driverid, EditingDriver);
            await LoadDriversAsync();
            EditingDriver = null;
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error saving driver: {ex.Message}");
        }
    }

    private void CancelEdit()
    {
        EditingDriver = null;
    }

    private async Task DeleteDriver(int driverId)
    {
        try
        {
            await DriverRepository.DeleteAsync(driverId);
            await LoadDriversAsync();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error deleting driver: {ex.Message}");
        }
    }

    private async Task AddNewDriver()
    {
        var newDriver = new Driver
        {
            Firstname = "New",
            Lastname = "Driver",
            Phone = null,
            Licensenumber = "NewLicense123",
            Licenseexpiry = DateOnly.FromDateTime(DateTime.Now.AddYears(1)),
            Status = "Available"
        };

        try
        {
            await DriverRepository.CreateAsync(newDriver);
            await LoadDriversAsync();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error adding driver: {ex.Message}");
        }
    }
}
