@page "/users"
@inject Repository<User> UserRepository

<PageTitle>Users</PageTitle>

<h3>Users</h3>

<button class="btn btn-primary" @onclick="OpenCreateModal">Create New User</button>

@if (users != null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Role</th>
                <th>Login</th>
                <th>Phone</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Firstname</td>
                    <td>@user.Lastname</td>
                    <td>@user.Role</td>
                    <td>@user.Login</td>
                    <td>@user.Phone</td>
                    <td>@user.Email</td>
                    <td>
                        <button class="btn btn-info" @onclick="() => OpenEditModal(user.Userid)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteUser(user.Userid)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<EditForm Model="userForEditing" OnValidSubmit="SaveUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstname">First Name</label>
        <InputText id="firstname" class="form-control" @bind-Value="userForEditing.Firstname" />
    </div>
    <div class="form-group">
        <label for="lastname">Last Name</label>
        <InputText id="lastname" class="form-control" @bind-Value="userForEditing.Lastname" />
    </div>
    <div class="form-group">
        <label for="role">Role</label>
        <InputText id="role" class="form-control" @bind-Value="userForEditing.Role" />
    </div>
    <div class="form-group">
        <label for="login">Login</label>
        <InputText id="login" class="form-control" @bind-Value="userForEditing.Login" />
    </div>
    <div class="form-group">
        <label for="phone">Phone</label>
        <InputText id="phone" class="form-control" @bind-Value="userForEditing.Phone" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="userForEditing.Email" />
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    private List<User> users = new List<User>();
    private User userForEditing = new User();
    private bool isEditMode = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        users = await UserRepository.GetAllAsync();
    }

    private void OpenCreateModal()
    {
        isEditMode = false;
        userForEditing = new User();
    }

    private void OpenEditModal(int userId)
    {
        isEditMode = true;
        var user = users.FirstOrDefault(u => u.Userid == userId);
        if (user != null)
        {
            userForEditing = user;
        }
    }

    private async Task SaveUser()
    {
        if (isEditMode)
        {
            await UserRepository.UpdateAsync(userForEditing.Userid, userForEditing);
        }
        else
        {
            await UserRepository.CreateAsync(userForEditing);
        }

        await LoadUsers();
    }

    private async Task DeleteUser(int userId)
    {
        await UserRepository.DeleteAsync(userId);
        await LoadUsers();
    }
}